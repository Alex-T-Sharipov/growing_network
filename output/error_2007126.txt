[2024-03-05 16:23:23,345] torch.distributed.run: [WARNING] 
[2024-03-05 16:23:23,345] torch.distributed.run: [WARNING] *****************************************
[2024-03-05 16:23:23,345] torch.distributed.run: [WARNING] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
[2024-03-05 16:23:23,345] torch.distributed.run: [WARNING] *****************************************
Training in distributed mode with multiple processes, 1 device per process.Process 0, total 2, device cuda:0.
WARNING: No pretrained configuration specified for MONet_T model. Using a default. Please add a config to the model pretrained_cfg registry or pass explicitly.
Training in distributed mode with multiple processes, 1 device per process.Process 1, total 2, device cuda:1.
WARNING: No pretrained configuration specified for MONet_T model. Using a default. Please add a config to the model pretrained_cfg registry or pass explicitly.
Model MONet_T_no_multistage created, param count:2607570
Data processing configuration for current model + dataset:
	input_size: (3, 32, 32)
	interpolation: bicubic
	mean: (0.485, 0.456, 0.406)
	std: (0.229, 0.224, 0.225)
	crop_pct: 0.875
	crop_mode: center
AMP not enabled. Training in float32.
Restoring model state from checkpoint...
Traceback (most recent call last):
  File "/home/sharipov/monet/train.py", line 1083, in <module>
Traceback (most recent call last):
  File "/home/sharipov/monet/train.py", line 1083, in <module>
    main()
  File "/home/sharipov/monet/train.py", line 551, in main
    main()
  File "/home/sharipov/monet/train.py", line 551, in main
    resume_epoch = resume_checkpoint(
  File "/home/sharipov/monet/timm/models/_helpers.py", line 122, in resume_checkpoint
    resume_epoch = resume_checkpoint(
  File "/home/sharipov/monet/timm/models/_helpers.py", line 122, in resume_checkpoint
    model.load_state_dict(state_dict)
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 2153, in load_state_dict
    model.load_state_dict(state_dict)
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 2153, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for MONet:
	Unexpected key(s) in state_dict: "network.0.model.1.0.norm.weight", "network.0.model.1.0.norm.bias", "network.0.model.1.0.mlp1.alpha", "network.0.model.1.0.mlp1.norm1.weight", "network.0.model.1.0.mlp1.norm1.bias", "network.0.model.1.0.mlp1.norm3.weight", "network.0.model.1.0.mlp1.norm3.bias", "network.0.model.1.0.mlp1.U1.weight", "network.0.model.1.0.mlp1.U1.bias", "network.0.model.1.0.mlp1.U2.weight", "network.0.model.1.0.mlp1.U2.bias", "network.0.model.1.0.mlp1.U3.weight", "network.0.model.1.0.mlp1.U3.bias", "network.0.model.1.0.mlp1.C.weight", "network.0.model.1.0.mlp1.C.bias", "network.0.model.1.0.mlp2.alpha", "network.0.model.1.0.mlp2.norm1.weight", "network.0.model.1.0.mlp2.norm1.bias", "network.0.model.1.0.mlp2.norm3.weight", "network.0.model.1.0.mlp2.norm3.bias", "network.0.model.1.0.mlp2.U1.weight", "network.0.model.1.0.mlp2.U1.bias", "network.0.model.1.0.mlp2.U2.weight", "network.0.model.1.0.mlp2.U2.bias", "network.0.model.1.0.mlp2.U3.weight", "network.0.model.1.0.mlp2.U3.bias", "network.0.model.1.0.mlp2.C.weight", "network.0.model.1.0.mlp2.C.bias", "network.0.model.2.0.norm.weight", "network.0.model.2.0.norm.bias", "network.0.model.2.0.mlp1.alpha", "network.0.model.2.0.mlp1.norm1.weight", "network.0.model.2.0.mlp1.norm1.bias", "network.0.model.2.0.mlp1.norm3.weight", "network.0.model.2.0.mlp1.norm3.bias", "network.0.model.2.0.mlp1.U1.weight", "network.0.model.2.0.mlp1.U1.bias", "network.0.model.2.0.mlp1.U2.weight", "network.0.model.2.0.mlp1.U2.bias", "network.0.model.2.0.mlp1.U3.weight", "network.0.model.2.0.mlp1.U3.bias", "network.0.model.2.0.mlp1.C.weight", "network.0.model.2.0.mlp1.C.bias", "network.0.model.2.0.mlp2.alpha", "network.0.model.2.0.mlp2.norm1.weight", "network.0.model.2.0.mlp2.norm1.bias", "network.0.model.2.0.mlp2.norm3.weight", "network.0.model.2.0.mlp2.norm3.bias", "network.0.model.2.0.mlp2.U1.weight", "network.0.model.2.0.mlp2.U1.bias", "network.0.model.2.0.mlp2.U2.weight", "network.0.model.2.0.mlp2.U2.bias", "network.0.model.2.0.mlp2.U3.weight", "network.0.model.2.0.mlp2.U3.bias", "network.0.model.2.0.mlp2.C.weight", "network.0.model.2.0.mlp2.C.bias", "network.0.model.3.0.norm.weight", "network.0.model.3.0.norm.bias", "network.0.model.3.0.mlp1.alpha", "network.0.model.3.0.mlp1.norm1.weight", "network.0.model.3.0.mlp1.norm1.bias", "network.0.model.3.0.mlp1.norm3.weight", "network.0.model.3.0.mlp1.norm3.bias", "network.0.model.3.0.mlp1.U1.weight", "network.0.model.3.0.mlp1.U1.bias", "network.0.model.3.0.mlp1.U2.weight", "network.0.model.3.0.mlp1.U2.bias", "network.0.model.3.0.mlp1.U3.weight", "network.0.model.3.0.mlp1.U3.bias", "network.0.model.3.0.mlp1.C.weight", "network.0.model.3.0.mlp1.C.bias", "network.0.model.3.0.mlp2.alpha", "network.0.model.3.0.mlp2.norm1.weight", "network.0.model.3.0.mlp2.norm1.bias", "network.0.model.3.0.mlp2.norm3.weight", "network.0.model.3.0.mlp2.norm3.bias", "network.0.model.3.0.mlp2.U1.weight", "network.0.model.3.0.mlp2.U1.bias", "network.0.model.3.0.mlp2.U2.weight", "network.0.model.3.0.mlp2.U2.bias", "network.0.model.3.0.mlp2.U3.weight", "network.0.model.3.0.mlp2.U3.bias", "network.0.model.3.0.mlp2.C.weight", "network.0.model.3.0.mlp2.C.bias", "network.2.model.1.0.norm.weight", "network.2.model.1.0.norm.bias", "network.2.model.1.0.mlp1.alpha", "network.2.model.1.0.mlp1.norm1.weight", "network.2.model.1.0.mlp1.norm1.bias", "network.2.model.1.0.mlp1.norm3.weight", "network.2.model.1.0.mlp1.norm3.bias", "network.2.model.1.0.mlp1.U1.weight", "network.2.model.1.0.mlp1.U1.bias", "network.2.model.1.0.mlp1.U2.weight", "network.2.model.1.0.mlp1.U2.bias", "network.2.model.1.0.mlp1.U3.weight", "network.2.model.1.0.mlp1.U3.bias", "network.2.model.1.0.mlp1.C.weight", "network.2.model.1.0.mlp1.C.bias", "network.2.model.1.0.mlp2.alpha", "network.2.model.1.0.mlp2.norm1.weight", "network.2.model.1.0.mlp2.norm1.bias", "network.2.model.1.0.mlp2.norm3.weight", "network.2.model.1.0.mlp2.norm3.bias", "network.2.model.1.0.mlp2.U1.weight", "network.2.model.1.0.mlp2.U1.bias", "network.2.model.1.0.mlp2.U2.weight", "network.2.model.1.0.mlp2.U2.bias", "network.2.model.1.0.mlp2.U3.weight", "network.2.model.1.0.mlp2.U3.bias", "network.2.model.1.0.mlp2.C.weight", "network.2.model.1.0.mlp2.C.bias", "network.2.model.2.0.norm.weight", "network.2.model.2.0.norm.bias", "network.2.model.2.0.mlp1.alpha", "network.2.model.2.0.mlp1.norm1.weight", "network.2.model.2.0.mlp1.norm1.bias", "network.2.model.2.0.mlp1.norm3.weight", "network.2.model.2.0.mlp1.norm3.bias", "network.2.model.2.0.mlp1.U1.weight", "network.2.model.2.0.mlp1.U1.bias", "network.2.model.2.0.mlp1.U2.weight", "network.2.model.2.0.mlp1.U2.bias", "network.2.model.2.0.mlp1.U3.weight", "network.2.model.2.0.mlp1.U3.bias", "network.2.model.2.0.mlp1.C.weight", "network.2.model.2.0.mlp1.C.bias", "network.2.model.2.0.mlp2.alpha", "network.2.model.2.0.mlp2.norm1.weight", "network.2.model.2.0.mlp2.norm1.bias", "network.2.model.2.0.mlp2.norm3.weight", "network.2.model.2.0.mlp2.norm3.bias", "network.2.model.2.0.mlp2.U1.weight", "network.2.model.2.0.mlp2.U1.bias", "network.2.model.2.0.mlp2.U2.weight", "network.2.model.2.0.mlp2.U2.bias", "network.2.model.2.0.mlp2.U3.weight", "network.2.model.2.0.mlp2.U3.bias", "network.2.model.2.0.mlp2.C.weight", "network.2.model.2.0.mlp2.C.bias", "network.2.model.3.0.norm.weight", "network.2.model.3.0.norm.bias", "network.2.model.3.0.mlp1.alpha", "network.2.model.3.0.mlp1.norm1.weight", "network.2.model.3.0.mlp1.norm1.bias", "network.2.model.3.0.mlp1.norm3.weight", "network.2.model.3.0.mlp1.norm3.bias", "network.2.model.3.0.mlp1.U1.weight", "network.2.model.3.0.mlp1.U1.bias", "network.2.model.3.0.mlp1.U2.weight", "network.2.model.3.0.mlp1.U2.bias", "network.2.model.3.0.mlp1.U3.weight", "network.2.model.3.0.mlp1.U3.bias", "network.2.model.3.0.mlp1.C.weight", "network.2.model.3.0.mlp1.C.bias", "network.2.model.3.0.mlp2.alpha", "network.2.model.3.0.mlp2.norm1.weight", "network.2.model.3.0.mlp2.norm1.bias", "network.2.model.3.0.mlp2.norm3.weight", "network.2.model.3.0.mlp2.norm3.bias", "network.2.model.3.0.mlp2.U1.weight", "network.2.model.3.0.mlp2.U1.bias", "network.2.model.3.0.mlp2.U2.weight", "network.2.model.3.0.mlp2.U2.bias", "network.2.model.3.0.mlp2.U3.weight", "network.2.model.3.0.mlp2.U3.bias", "network.2.model.3.0.mlp2.C.weight", "network.2.model.3.0.mlp2.C.bias", "network.2.model.4.0.norm.weight", "network.2.model.4.0.norm.bias", "network.2.model.4.0.mlp1.alpha", "network.2.model.4.0.mlp1.norm1.weight", "network.2.model.4.0.mlp1.norm1.bias", "network.2.model.4.0.mlp1.norm3.weight", "network.2.model.4.0.mlp1.norm3.bias", "network.2.model.4.0.mlp1.U1.weight", "network.2.model.4.0.mlp1.U1.bias", "network.2.model.4.0.mlp1.U2.weight", "network.2.model.4.0.mlp1.U2.bias", "network.2.model.4.0.mlp1.U3.weight", "network.2.model.4.0.mlp1.U3.bias", "network.2.model.4.0.mlp1.C.weight", "network.2.model.4.0.mlp1.C.bias", "network.2.model.4.0.mlp2.alpha", "network.2.model.4.0.mlp2.norm1.weight", "network.2.model.4.0.mlp2.norm1.bias", "network.2.model.4.0.mlp2.norm3.weight", "network.2.model.4.0.mlp2.norm3.bias", "network.2.model.4.0.mlp2.U1.weight", "network.2.model.4.0.mlp2.U1.bias", "network.2.model.4.0.mlp2.U2.weight", "network.2.model.4.0.mlp2.U2.bias", "network.2.model.4.0.mlp2.U3.weight", "network.2.model.4.0.mlp2.U3.bias", "network.2.model.4.0.mlp2.C.weight", "network.2.model.4.0.mlp2.C.bias", "network.2.model.5.0.norm.weight", "network.2.model.5.0.norm.bias", "network.2.model.5.0.mlp1.alpha", "network.2.model.5.0.mlp1.norm1.weight", "network.2.model.5.0.mlp1.norm1.bias", "network.2.model.5.0.mlp1.norm3.weight", "network.2.model.5.0.mlp1.norm3.bias", "network.2.model.5.0.mlp1.U1.weight", "network.2.model.5.0.mlp1.U1.bias", "network.2.model.5.0.mlp1.U2.weight", "network.2.model.5.0.mlp1.U2.bias", "network.2.model.5.0.mlp1.U3.weight", "network.2.model.5.0.mlp1.U3.bias", "network.2.model.5.0.mlp1.C.weight", "network.2.model.5.0.mlp1.C.bias", "network.2.model.5.0.mlp2.alpha", "network.2.model.5.0.mlp2.norm1.weight", "network.2.model.5.0.mlp2.norm1.bias", "network.2.model.5.0.mlp2.norm3.weight", "network.2.model.5.0.mlp2.norm3.bias", "network.2.model.5.0.mlp2.U1.weight", "network.2.model.5.0.mlp2.U1.bias", "network.2.model.5.0.mlp2.U2.weight", "network.2.model.5.0.mlp2.U2.bias", "network.2.model.5.0.mlp2.U3.weight", "network.2.model.5.0.mlp2.U3.bias", "network.2.model.5.0.mlp2.C.weight", "network.2.model.5.0.mlp2.C.bias", "network.2.model.6.0.norm.weight", "network.2.model.6.0.norm.bias", "network.2.model.6.0.mlp1.alpha", "network.2.model.6.0.mlp1.norm1.weight", "network.2.model.6.0.mlp1.norm1.bias", "network.2.model.6.0.mlp1.norm3.weight", "network.2.model.6.0.mlp1.norm3.bias", "network.2.model.6.0.mlp1.U1.weight", "network.2.model.6.0.mlp1.U1.bias", "network.2.model.6.0.mlp1.U2.weight", "network.2.model.6.0.mlp1.U2.bias", "network.2.model.6.0.mlp1.U3.weight", "network.2.model.6.0.mlp1.U3.bias", "network.2.model.6.0.mlp1.C.weight", "network.2.model.6.0.mlp1.C.bias", "network.2.model.6.0.mlp2.alpha", "network.2.model.6.0.mlp2.norm1.weight", "network.2.model.6.0.mlp2.norm1.bias", "network.2.model.6.0.mlp2.norm3.weight", "network.2.model.6.0.mlp2.norm3.bias", "network.2.model.6.0.mlp2.U1.weight", "network.2.model.6.0.mlp2.U1.bias", "network.2.model.6.0.mlp2.U2.weight", "network.2.model.6.0.mlp2.U2.bias", "network.2.model.6.0.mlp2.U3.weight", "network.2.model.6.0.mlp2.U3.bias", "network.2.model.6.0.mlp2.C.weight", "network.2.model.6.0.mlp2.C.bias", "network.2.model.7.0.norm.weight", "network.2.model.7.0.norm.bias", "network.2.model.7.0.mlp1.alpha", "network.2.model.7.0.mlp1.norm1.weight", "network.2.model.7.0.mlp1.norm1.bias", "network.2.model.7.0.mlp1.norm3.weight", "network.2.model.7.0.mlp1.norm3.bias", "network.2.model.7.0.mlp1.U1.weight", "network.2.model.7.0.mlp1.U1.bias", "network.2.model.7.0.mlp1.U2.weight", "network.2.model.7.0.mlp1.U2.bias", "network.2.model.7.0.mlp1.U3.weight", "network.2.model.7.0.mlp1.U3.bias", "network.2.model.7.0.mlp1.C.weight", "network.2.model.7.0.mlp1.C.bias", "network.2.model.7.0.mlp2.alpha", "network.2.model.7.0.mlp2.norm1.weight", "network.2.model.7.0.mlp2.norm1.bias", "network.2.model.7.0.mlp2.norm3.weight", "network.2.model.7.0.mlp2.norm3.bias", "network.2.model.7.0.mlp2.U1.weight", "network.2.model.7.0.mlp2.U1.bias", "network.2.model.7.0.mlp2.U2.weight", "network.2.model.7.0.mlp2.U2.bias", "network.2.model.7.0.mlp2.U3.weight", "network.2.model.7.0.mlp2.U3.bias", "network.2.model.7.0.mlp2.C.weight", "network.2.model.7.0.mlp2.C.bias", "network.4.model.1.0.norm.weight", "network.4.model.1.0.norm.bias", "network.4.model.1.0.mlp1.alpha", "network.4.model.1.0.mlp1.norm1.weight", "network.4.model.1.0.mlp1.norm1.bias", "network.4.model.1.0.mlp1.norm3.weight", "network.4.model.1.0.mlp1.norm3.bias", "network.4.model.1.0.mlp1.U1.weight", "network.4.model.1.0.mlp1.U1.bias", "network.4.model.1.0.mlp1.U2.weight", "network.4.model.1.0.mlp1.U2.bias", "network.4.model.1.0.mlp1.U3.weight", "network.4.model.1.0.mlp1.U3.bias", "network.4.model.1.0.mlp1.C.weight", "network.4.model.1.0.mlp1.C.bias", "network.4.model.1.0.mlp2.alpha", "network.4.model.1.0.mlp2.norm1.weight", "network.4.model.1.0.mlp2.norm1.bias", "network.4.model.1.0.mlp2.norm3.weight", "network.4.model.1.0.mlp2.norm3.bias", "network.4.model.1.0.mlp2.U1.weight", "network.4.model.1.0.mlp2.U1.bias", "network.4.model.1.0.mlp2.U2.weight", "network.4.model.1.0.mlp2.U2.bias", "network.4.model.1.0.mlp2.U3.weight", "network.4.model.1.0.mlp2.U3.bias", "network.4.model.1.0.mlp2.C.weight", "network.4.model.1.0.mlp2.C.bias", "network.4.model.2.0.norm.weight", "network.4.model.2.0.norm.bias", "network.4.model.2.0.mlp1.alpha", "network.4.model.2.0.mlp1.norm1.weight", "network.4.model.2.0.mlp1.norm1.bias", "network.4.model.2.0.mlp1.norm3.weight", "network.4.model.2.0.mlp1.norm3.bias", "network.4.model.2.0.mlp1.U1.weight", "network.4.model.2.0.mlp1.U1.bias", "network.4.model.2.0.mlp1.U2.weight", "network.4.model.2.0.mlp1.U2.bias", "network.4.model.2.0.mlp1.U3.weight", "network.4.model.2.0.mlp1.U3.bias", "network.4.model.2.0.mlp1.C.weight", "network.4.model.2.0.mlp1.C.bias", "network.4.model.2.0.mlp2.alpha", "network.4.model.2.0.mlp2.norm1.weight", "network.4.model.2.0.mlp2.norm1.bias", "network.4.model.2.0.mlp2.norm3.weight", "network.4.model.2.0.mlp2.norm3.bias", "network.4.model.2.0.mlp2.U1.weight", "network.4.model.2.0.mlp2.U1.bias", "network.4.model.2.0.mlp2.U2.weight", "network.4.model.2.0.mlp2.U2.bias", "network.4.model.2.0.mlp2.U3.weight", "network.4.model.2.0.mlp2.U3.bias", "network.4.model.2.0.mlp2.C.weight", "network.4.model.2.0.mlp2.C.bias", "network.4.model.3.0.norm.weight", "network.4.model.3.0.norm.bias", "network.4.model.3.0.mlp1.alpha", "network.4.model.3.0.mlp1.norm1.weight", "network.4.model.3.0.mlp1.norm1.bias", "network.4.model.3.0.mlp1.norm3.weight", "network.4.model.3.0.mlp1.norm3.bias", "network.4.model.3.0.mlp1.U1.weight", "network.4.model.3.0.mlp1.U1.bias", "network.4.model.3.0.mlp1.U2.weight", "network.4.model.3.0.mlp1.U2.bias", "network.4.model.3.0.mlp1.U3.weight", "network.4.model.3.0.mlp1.U3.bias", "network.4.model.3.0.mlp1.C.weight", "network.4.model.3.0.mlp1.C.bias", "network.4.model.3.0.mlp2.alpha", "network.4.model.3.0.mlp2.norm1.weight", "network.4.model.3.0.mlp2.norm1.bias", "network.4.model.3.0.mlp2.norm3.weight", "network.4.model.3.0.mlp2.norm3.bias", "network.4.model.3.0.mlp2.U1.weight", "network.4.model.3.0.mlp2.U1.bias", "network.4.model.3.0.mlp2.U2.weight", "network.4.model.3.0.mlp2.U2.bias", "network.4.model.3.0.mlp2.U3.weight", "network.4.model.3.0.mlp2.U3.bias", "network.4.model.3.0.mlp2.C.weight", "network.4.model.3.0.mlp2.C.bias", "network.4.model.4.0.norm.weight", "network.4.model.4.0.norm.bias", "network.4.model.4.0.mlp1.alpha", "network.4.model.4.0.mlp1.norm1.weight", "network.4.model.4.0.mlp1.norm1.bias", "network.4.model.4.0.mlp1.norm3.weight", "network.4.model.4.0.mlp1.norm3.bias", "network.4.model.4.0.mlp1.U1.weight", "network.4.model.4.0.mlp1.U1.bias", "network.4.model.4.0.mlp1.U2.weight", "network.4.model.4.0.mlp1.U2.bias", "network.4.model.4.0.mlp1.U3.weight", "network.4.model.4.0.mlp1.U3.bias", "network.4.model.4.0.mlp1.C.weight", "network.4.model.4.0.mlp1.C.bias", "network.4.model.4.0.mlp2.alpha", "network.4.model.4.0.mlp2.norm1.weight", "network.4.model.4.0.mlp2.norm1.bias", "network.4.model.4.0.mlp2.norm3.weight", "network.4.model.4.0.mlp2.norm3.bias", "network.4.model.4.0.mlp2.U1.weight", "network.4.model.4.0.mlp2.U1.bias", "network.4.model.4.0.mlp2.U2.weight", "network.4.model.4.0.mlp2.U2.bias", "network.4.model.4.0.mlp2.U3.weight", "network.4.model.4.0.mlp2.U3.bias", "network.4.model.4.0.mlp2.C.weight", "network.4.model.4.0.mlp2.C.bias", "network.4.model.5.0.norm.weight", "network.4.model.5.0.norm.bias", "network.4.model.5.0.mlp1.alpha", "network.4.model.5.0.mlp1.norm1.weight", "network.4.model.5.0.mlp1.norm1.bias", "network.4.model.5.0.mlp1.norm3.weight", "network.4.model.5.0.mlp1.norm3.bias", "network.4.model.5.0.mlp1.U1.weight", "network.4.model.5.0.mlp1.U1.bias", "network.4.model.5.0.mlp1.U2.weight", "network.4.model.5.0.mlp1.U2.bias", "network.4.model.5.0.mlp1.U3.weight", "network.4.model.5.0.mlp1.U3.bias", "network.4.model.5.0.mlp1.C.weight", "network.4.model.5.0.mlp1.C.bias", "network.4.model.5.0.mlp2.alpha", "network.4.model.5.0.mlp2.norm1.weight", "network.4.model.5.0.mlp2.norm1.bias", "network.4.model.5.0.mlp2.norm3.weight", "network.4.model.5.0.mlp2.norm3.bias", "network.4.model.5.0.mlp2.U1.weight", "network.4.model.5.0.mlp2.U1.bias", "network.4.model.5.0.mlp2.U2.weight", "network.4.model.5.0.mlp2.U2.bias", "network.4.model.5.0.mlp2.U3.weight", "network.4.model.5.0.mlp2.U3.bias", "network.4.model.5.0.mlp2.C.weight", "network.4.model.5.0.mlp2.C.bias", "network.4.model.6.0.norm.weight", "network.4.model.6.0.norm.bias", "network.4.model.6.0.mlp1.alpha", "network.4.model.6.0.mlp1.norm1.weight", "network.4.model.6.0.mlp1.norm1.bias", "network.4.model.6.0.mlp1.norm3.weight", "network.4.model.6.0.mlp1.norm3.bias", "network.4.model.6.0.mlp1.U1.weight", "network.4.model.6.0.mlp1.U1.bias", "network.4.model.6.0.mlp1.U2.weight", "network.4.model.6.0.mlp1.U2.bias", "network.4.model.6.0.mlp1.U3.weight", "network.4.model.6.0.mlp1.U3.bias", "network.4.model.6.0.mlp1.C.weight", "network.4.model.6.0.mlp1.C.bias", "network.4.model.6.0.mlp2.alpha", "network.4.model.6.0.mlp2.norm1.weight", "network.4.model.6.0.mlp2.norm1.bias", "network.4.model.6.0.mlp2.norm3.weight", "network.4.model.6.0.mlp2.norm3.bias", "network.4.model.6.0.mlp2.U1.weight", "network.4.model.6.0.mlp2.U1.bias", "network.4.model.6.0.mlp2.U2.weight", "network.4.model.6.0.mlp2.U2.bias", "network.4.model.6.0.mlp2.U3.weight", "network.4.model.6.0.mlp2.U3.bias", "network.4.model.6.0.mlp2.C.weight", "network.4.model.6.0.mlp2.C.bias", "network.4.model.7.0.norm.weight", "network.4.model.7.0.norm.bias", "network.4.model.7.0.mlp1.alpha", "network.4.model.7.0.mlp1.norm1.weight", "network.4.model.7.0.mlp1.norm1.bias", "network.4.model.7.0.mlp1.norm3.weight", "network.4.model.7.0.mlp1.norm3.bias", "network.4.model.7.0.mlp1.U1.weight", "network.4.model.7.0.mlp1.U1.bias", "network.4.model.7.0.mlp1.U2.weight", "network.4.model.7.0.mlp1.U2.bias", "network.4.model.7.0.mlp1.U3.weight", "network.4.model.7.0.mlp1.U3.bias", "network.4.model.7.0.mlp1.C.weight", "network.4.model.7.0.mlp1.C.bias", "network.4.model.7.0.mlp2.alpha", "network.4.model.7.0.mlp2.norm1.weight", "network.4.model.7.0.mlp2.norm1.bias", "network.4.model.7.0.mlp2.norm3.weight", "network.4.model.7.0.mlp2.norm3.bias", "network.4.model.7.0.mlp2.U1.weight", "network.4.model.7.0.mlp2.U1.bias", "network.4.model.7.0.mlp2.U2.weight", "network.4.model.7.0.mlp2.U2.bias", "network.4.model.7.0.mlp2.U3.weight", "network.4.model.7.0.mlp2.U3.bias", "network.4.model.7.0.mlp2.C.weight", "network.4.model.7.0.mlp2.C.bias", "network.4.model.8.0.norm.weight", "network.4.model.8.0.norm.bias", "network.4.model.8.0.mlp1.alpha", "network.4.model.8.0.mlp1.norm1.weight", "network.4.model.8.0.mlp1.norm1.bias", "network.4.model.8.0.mlp1.norm3.weight", "network.4.model.8.0.mlp1.norm3.bias", "network.4.model.8.0.mlp1.U1.weight", "network.4.model.8.0.mlp1.U1.bias", "network.4.model.8.0.mlp1.U2.weight", "network.4.model.8.0.mlp1.U2.bias", "network.4.model.8.0.mlp1.U3.weight", "network.4.model.8.0.mlp1.U3.bias", "network.4.model.8.0.mlp1.C.weight", "network.4.model.8.0.mlp1.C.bias", "network.4.model.8.0.mlp2.alpha", "network.4.model.8.0.mlp2.norm1.weight", "network.4.model.8.0.mlp2.norm1.bias", "network.4.model.8.0.mlp2.norm3.weight", "network.4.model.8.0.mlp2.norm3.bias", "network.4.model.8.0.mlp2.U1.weight", "network.4.model.8.0.mlp2.U1.bias", "network.4.model.8.0.mlp2.U2.weight", "network.4.model.8.0.mlp2.U2.bias", "network.4.model.8.0.mlp2.U3.weight", "network.4.model.8.0.mlp2.U3.bias", "network.4.model.8.0.mlp2.C.weight", "network.4.model.8.0.mlp2.C.bias", "network.4.model.9.0.norm.weight", "network.4.model.9.0.norm.bias", "network.4.model.9.0.mlp1.alpha", "network.4.model.9.0.mlp1.norm1.weight", "network.4.model.9.0.mlp1.norm1.bias", "network.4.model.9.0.mlp1.norm3.weight", "network.4.model.9.0.mlp1.norm3.bias", "network.4.model.9.0.mlp1.U1.weight", "network.4.model.9.0.mlp1.U1.bias", "network.4.model.9.0.mlp1.U2.weight", "network.4.model.9.0.mlp1.U2.bias", "network.4.model.9.0.mlp1.U3.weight", "network.4.model.9.0.mlp1.U3.bias", "network.4.model.9.0.mlp1.C.weight", "network.4.model.9.0.mlp1.C.bias", "network.4.model.9.0.mlp2.alpha", "network.4.model.9.0.mlp2.norm1.weight", "network.4.model.9.0.mlp2.norm1.bias", "network.4.model.9.0.mlp2.norm3.weight", "network.4.model.9.0.mlp2.norm3.bias", "network.4.model.9.0.mlp2.U1.weight", "network.4.model.9.0.mlp2.U1.bias", "network.4.model.9.0.mlp2.U2.weight", "network.4.model.9.0.mlp2.U2.bias", "network.4.model.9.0.mlp2.U3.weight", "network.4.model.9.0.mlp2.U3.bias", "network.4.model.9.0.mlp2.C.weight", "network.4.model.9.0.mlp2.C.bias", "network.4.model.10.0.norm.weight", "network.4.model.10.0.norm.bias", "network.4.model.10.0.mlp1.alpha", "network.4.model.10.0.mlp1.norm1.weight", "network.4.model.10.0.mlp1.norm1.bias", "network.4.model.10.0.mlp1.norm3.weight", "network.4.model.10.0.mlp1.norm3.bias", "network.4.model.10.0.mlp1.U1.weight", "network.4.model.10.0.mlp1.U1.bias", "network.4.model.10.0.mlp1.U2.weight", "network.4.model.10.0.mlp1.U2.bias", "network.4.model.10.0.mlp1.U3.weight", "network.4.model.10.0.mlp1.U3.bias", "network.4.model.10.0.mlp1.C.weight", "network.4.model.10.0.mlp1.C.bias", "network.4.model.10.0.mlp2.alpha", "network.4.model.10.0.mlp2.norm1.weight", "network.4.model.10.0.mlp2.norm1.bias", "network.4.model.10.0.mlp2.norm3.weight", "network.4.model.10.0.mlp2.norm3.bias", "network.4.model.10.0.mlp2.U1.weight", "network.4.model.10.0.mlp2.U1.bias", "network.4.model.10.0.mlp2.U2.weight", "network.4.model.10.0.mlp2.U2.bias", "network.4.model.10.0.mlp2.U3.weight", "network.4.model.10.0.mlp2.U3.bias", "network.4.model.10.0.mlp2.C.weight", "network.4.model.10.0.mlp2.C.bias", "network.4.model.11.0.norm.weight", "network.4.model.11.0.norm.bias", "network.4.model.11.0.mlp1.alpha", "network.4.model.11.0.mlp1.norm1.weight", "network.4.model.11.0.mlp1.norm1.bias", "network.4.model.11.0.mlp1.norm3.weight", "network.4.model.11.0.mlp1.norm3.bias", "network.4.model.11.0.mlp1.U1.weight", "network.4.model.11.0.mlp1.U1.bias", "network.4.model.11.0.mlp1.U2.weight", "network.4.model.11.0.mlp1.U2.bias", "network.4.model.11.0.mlp1.U3.weight", "network.4.model.11.0.mlp1.U3.bias", "network.4.model.11.0.mlp1.C.weight", "network.4.model.11.0.mlp1.C.bias", "network.4.model.11.0.mlp2.alpha", "network.4.model.11.0.mlp2.norm1.weight", "network.4.model.11.0.mlp2.norm1.bias", "network.4.model.11.0.mlp2.norm3.weight", "network.4.model.11.0.mlp2.norm3.bias", "network.4.model.11.0.mlp2.U1.weight", "network.4.model.11.0.mlp2.U1.bias", "network.4.model.11.0.mlp2.U2.weight", "network.4.model.11.0.mlp2.U2.bias", "network.4.model.11.0.mlp2.U3.weight", "network.4.model.11.0.mlp2.U3.bias", "network.4.model.11.0.mlp2.C.weight", "network.4.model.11.0.mlp2.C.bias", "network.6.model.1.0.norm.weight", "network.6.model.1.0.norm.bias", "network.6.model.1.0.mlp1.alpha", "network.6.model.1.0.mlp1.norm1.weight", "network.6.model.1.0.mlp1.norm1.bias", "network.6.model.1.0.mlp1.norm3.weight", "network.6.model.1.0.mlp1.norm3.bias", "network.6.model.1.0.mlp1.U1.weight", "network.6.model.1.0.mlp1.U1.bias", "network.6.model.1.0.mlp1.U2.weight", "network.6.model.1.0.mlp1.U2.bias", "network.6.model.1.0.mlp1.U3.weight", "network.6.model.1.0.mlp1.U3.bias", "network.6.model.1.0.mlp1.C.weight", "network.6.model.1.0.mlp1.C.bias", "network.6.model.1.0.mlp2.alpha", "network.6.model.1.0.mlp2.norm1.weight", "network.6.model.1.0.mlp2.norm1.bias", "network.6.model.1.0.mlp2.norm3.weight", "network.6.model.1.0.mlp2.norm3.bias", "network.6.model.1.0.mlp2.U1.weight", "network.6.model.1.0.mlp2.U1.bias", "network.6.model.1.0.mlp2.U2.weight", "network.6.model.1.0.mlp2.U2.bias", "network.6.model.1.0.mlp2.U3.weight", "network.6.model.1.0.mlp2.U3.bias", "network.6.model.1.0.mlp2.C.weight", "network.6.model.1.0.mlp2.C.bias", "network.6.model.2.0.norm.weight", "network.6.model.2.0.norm.bias", "network.6.model.2.0.mlp1.alpha", "network.6.model.2.0.mlp1.norm1.weight", "network.6.model.2.0.mlp1.norm1.bias", "network.6.model.2.0.mlp1.norm3.weight", "network.6.model.2.0.mlp1.norm3.bias", "network.6.model.2.0.mlp1.U1.weight", "network.6.model.2.0.mlp1.U1.bias", "network.6.model.2.0.mlp1.U2.weight", "network.6.model.2.0.mlp1.U2.bias", "network.6.model.2.0.mlp1.U3.weight", "network.6.model.2.0.mlp1.U3.bias", "network.6.model.2.0.mlp1.C.weight", "network.6.model.2.0.mlp1.C.bias", "network.6.model.2.0.mlp2.alpha", "network.6.model.2.0.mlp2.norm1.weight", "network.6.model.2.0.mlp2.norm1.bias", "network.6.model.2.0.mlp2.norm3.weight", "network.6.model.2.0.mlp2.norm3.bias", "network.6.model.2.0.mlp2.U1.weight", "network.6.model.2.0.mlp2.U1.bias", "network.6.model.2.0.mlp2.U2.weight", "network.6.model.2.0.mlp2.U2.bias", "network.6.model.2.0.mlp2.U3.weight", "network.6.model.2.0.mlp2.U3.bias", "network.6.model.2.0.mlp2.C.weight", "network.6.model.2.0.mlp2.C.bias", "network.6.model.3.0.norm.weight", "network.6.model.3.0.norm.bias", "network.6.model.3.0.mlp1.alpha", "network.6.model.3.0.mlp1.norm1.weight", "network.6.model.3.0.mlp1.norm1.bias", "network.6.model.3.0.mlp1.norm3.weight", "network.6.model.3.0.mlp1.norm3.bias", "network.6.model.3.0.mlp1.U1.weight", "network.6.model.3.0.mlp1.U1.bias", "network.6.model.3.0.mlp1.U2.weight", "network.6.model.3.0.mlp1.U2.bias", "network.6.model.3.0.mlp1.U3.weight", "network.6.model.3.0.mlp1.U3.bias", "network.6.model.3.0.mlp1.C.weight", "network.6.model.3.0.mlp1.C.bias", "network.6.model.3.0.mlp2.alpha", "network.6.model.3.0.mlp2.norm1.weight", "network.6.model.3.0.mlp2.norm1.bias", "network.6.model.3.0.mlp2.norm3.weight", "network.6.model.3.0.mlp2.norm3.bias", "network.6.model.3.0.mlp2.U1.weight", "network.6.model.3.0.mlp2.U1.bias", "network.6.model.3.0.mlp2.U2.weight", "network.6.model.3.0.mlp2.U2.bias", "network.6.model.3.0.mlp2.U3.weight", "network.6.model.3.0.mlp2.U3.bias", "network.6.model.3.0.mlp2.C.weight", "network.6.model.3.0.mlp2.C.bias", "network.6.model.4.0.norm.weight", "network.6.model.4.0.norm.bias", "network.6.model.4.0.mlp1.alpha", "network.6.model.4.0.mlp1.norm1.weight", "network.6.model.4.0.mlp1.norm1.bias", "network.6.model.4.0.mlp1.norm3.weight", "network.6.model.4.0.mlp1.norm3.bias", "network.6.model.4.0.mlp1.U1.weight", "network.6.model.4.0.mlp1.U1.bias", "network.6.model.4.0.mlp1.U2.weight", "network.6.model.4.0.mlp1.U2.bias", "network.6.model.4.0.mlp1.U3.weight", "network.6.model.4.0.mlp1.U3.bias", "network.6.model.4.0.mlp1.C.weight", "network.6.model.4.0.mlp1.C.bias", "network.6.model.4.0.mlp2.alpha", "network.6.model.4.0.mlp2.norm1.weight", "network.6.model.4.0.mlp2.norm1.bias", "network.6.model.4.0.mlp2.norm3.weight", "network.6.model.4.0.mlp2.norm3.bias", "network.6.model.4.0.mlp2.U1.weight", "network.6.model.4.0.mlp2.U1.bias", "network.6.model.4.0.mlp2.U2.weight", "network.6.model.4.0.mlp2.U2.bias", "network.6.model.4.0.mlp2.U3.weight", "network.6.model.4.0.mlp2.U3.bias", "network.6.model.4.0.mlp2.C.weight", "network.6.model.4.0.mlp2.C.bias", "network.6.model.5.0.norm.weight", "network.6.model.5.0.norm.bias", "network.6.model.5.0.mlp1.alpha", "network.6.model.5.0.mlp1.norm1.weight", "network.6.model.5.0.mlp1.norm1.bias", "network.6.model.5.0.mlp1.norm3.weight", "network.6.model.5.0.mlp1.norm3.bias", "network.6.model.5.0.mlp1.U1.weight", "network.6.model.5.0.mlp1.U1.bias", "network.6.model.5.0.mlp1.U2.weight", "network.6.model.5.0.mlp1.U2.bias", "network.6.model.5.0.mlp1.U3.weight", "network.6.model.5.0.mlp1.U3.bias", "network.6.model.5.0.mlp1.C.weight", "network.6.model.5.0.mlp1.C.bias", "network.6.model.5.0.mlp2.alpha", "network.6.model.5.0.mlp2.norm1.weight", "network.6.model.5.0.mlp2.norm1.bias", "network.6.model.5.0.mlp2.norm3.weight", "network.6.model.5.0.mlp2.norm3.bias", "network.6.model.5.0.mlp2.U1.weight", "network.6.model.5.0.mlp2.U1.bias", "network.6.model.5.0.mlp2.U2.weight", "network.6.model.5.0.mlp2.U2.bias", "network.6.model.5.0.mlp2.U3.weight", "network.6.model.5.0.mlp2.U3.bias", "network.6.model.5.0.mlp2.C.weight", "network.6.model.5.0.mlp2.C.bias", "network.6.model.6.0.norm.weight", "network.6.model.6.0.norm.bias", "network.6.model.6.0.mlp1.alpha", "network.6.model.6.0.mlp1.norm1.weight", "network.6.model.6.0.mlp1.norm1.bias", "network.6.model.6.0.mlp1.norm3.weight", "network.6.model.6.0.mlp1.norm3.bias", "network.6.model.6.0.mlp1.U1.weight", "network.6.model.6.0.mlp1.U1.bias", "network.6.model.6.0.mlp1.U2.weight", "network.6.model.6.0.mlp1.U2.bias", "network.6.model.6.0.mlp1.U3.weight", "network.6.model.6.0.mlp1.U3.bias", "network.6.model.6.0.mlp1.C.weight", "network.6.model.6.0.mlp1.C.bias", "network.6.model.6.0.mlp2.alpha", "network.6.model.6.0.mlp2.norm1.weight", "network.6.model.6.0.mlp2.norm1.bias", "network.6.model.6.0.mlp2.norm3.weight", "network.6.model.6.0.mlp2.norm3.bias", "network.6.model.6.0.mlp2.U1.weight", "network.6.model.6.0.mlp2.U1.bias", "network.6.model.6.0.mlp2.U2.weight", "network.6.model.6.0.mlp2.U2.bias", "network.6.model.6.0.mlp2.U3.weight", "network.6.model.6.0.mlp2.U3.bias", "network.6.model.6.0.mlp2.C.weight", "network.6.model.6.0.mlp2.C.bias", "network.6.model.7.0.norm.weight", "network.6.model.7.0.norm.bias", "network.6.model.7.0.mlp1.alpha", "network.6.model.7.0.mlp1.norm1.weight", "network.6.model.7.0.mlp1.norm1.bias", "network.6.model.7.0.mlp1.norm3.weight", "network.6.model.7.0.mlp1.norm3.bias", "network.6.model.7.0.mlp1.U1.weight", "network.6.model.7.0.mlp1.U1.bias", "network.6.model.7.0.mlp1.U2.weight", "network.6.model.7.0.mlp1.U2.bias", "network.6.model.7.0.mlp1.U3.weight", "network.6.model.7.0.mlp1.U3.bias", "network.6.model.7.0.mlp1.C.weight", "network.6.model.7.0.mlp1.C.bias", "network.6.model.7.0.mlp2.alpha", "network.6.model.7.0.mlp2.norm1.weight", "network.6.model.7.0.mlp2.norm1.bias", "network.6.model.7.0.mlp2.norm3.weight", "network.6.model.7.0.mlp2.norm3.bias", "network.6.model.7.0.mlp2.U1.weight", "network.6.model.7.0.mlp2.U1.bias", "network.6.model.7.0.mlp2.U2.weight", "network.6.model.7.0.mlp2.U2.bias", "network.6.model.7.0.mlp2.U3.weight", "network.6.model.7.0.mlp2.U3.bias", "network.6.model.7.0.mlp2.C.weight", "network.6.model.7.0.mlp2.C.bias", "network.6.model.8.0.norm.weight", "network.6.model.8.0.norm.bias", "network.6.model.8.0.mlp1.alpha", "network.6.model.8.0.mlp1.norm1.weight", "network.6.model.8.0.mlp1.norm1.bias", "network.6.model.8.0.mlp1.norm3.weight", "network.6.model.8.0.mlp1.norm3.bias", "network.6.model.8.0.mlp1.U1.weight", "network.6.model.8.0.mlp1.U1.bias", "network.6.model.8.0.mlp1.U2.weight", "network.6.model.8.0.mlp1.U2.bias", "network.6.model.8.0.mlp1.U3.weight", "network.6.model.8.0.mlp1.U3.bias", "network.6.model.8.0.mlp1.C.weight", "network.6.model.8.0.mlp1.C.bias", "network.6.model.8.0.mlp2.alpha", "network.6.model.8.0.mlp2.norm1.weight", "network.6.model.8.0.mlp2.norm1.bias", "network.6.model.8.0.mlp2.norm3.weight", "network.6.model.8.0.mlp2.norm3.bias", "network.6.model.8.0.mlp2.U1.weight", "network.6.model.8.0.mlp2.U1.bias", "network.6.model.8.0.mlp2.U2.weight", "network.6.model.8.0.mlp2.U2.bias", "network.6.model.8.0.mlp2.U3.weight", "network.6.model.8.0.mlp2.U3.bias", "network.6.model.8.0.mlp2.C.weight", "network.6.model.8.0.mlp2.C.bias", "network.6.model.9.0.norm.weight", "network.6.model.9.0.norm.bias", "network.6.model.9.0.mlp1.alpha", "network.6.model.9.0.mlp1.norm1.weight", "network.6.model.9.0.mlp1.norm1.bias", "network.6.model.9.0.mlp1.norm3.weight", "network.6.model.9.0.mlp1.norm3.bias", "network.6.model.9.0.mlp1.U1.weight", "network.6.model.9.0.mlp1.U1.bias", "network.6.model.9.0.mlp1.U2.weight", "network.6.model.9.0.mlp1.U2.bias", "network.6.model.9.0.mlp1.U3.weight", "network.6.model.9.0.mlp1.U3.bias", "network.6.model.9.0.mlp1.C.weight", "network.6.model.9.0.mlp1.C.bias", "network.6.model.9.0.mlp2.alpha", "network.6.model.9.0.mlp2.norm1.weight", "network.6.model.9.0.mlp2.norm1.bias", "network.6.model.9.0.mlp2.norm3.weight", "network.6.model.9.0.mlp2.norm3.bias", "network.6.model.9.0.mlp2.U1.weight", "network.6.model.9.0.mlp2.U1.bias", "network.6.model.9.0.mlp2.U2.weight", "network.6.model.9.0.mlp2.U2.bias", "network.6.model.9.0.mlp2.U3.weight", "network.6.model.9.0.mlp2.U3.bias", "network.6.model.9.0.mlp2.C.weight", "network.6.model.9.0.mlp2.C.bias". 
	size mismatch for fs.weight: copying a param with shape torch.Size([64, 3, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 3, 2, 2]).
	size mismatch for fs.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for fs2.weight: copying a param with shape torch.Size([64, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for fs2.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.norm.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.norm.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm3.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.U1.weight: copying a param with shape torch.Size([64, 64]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.0.model.0.0.mlp1.U1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.U2.weight: copying a param with shape torch.Size([8, 64]) from checkpoint, the shape in current model is torch.Size([24, 192]).
	size mismatch for network.0.model.0.0.mlp1.U2.bias: copying a param with shape torch.Size([8]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for network.0.model.0.0.mlp1.U3.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([192, 24]).
	size mismatch for network.0.model.0.0.mlp1.U3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.C.weight: copying a param with shape torch.Size([64, 64]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.0.model.0.0.mlp1.C.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp2.norm1.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm3.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm3.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.U1.weight: copying a param with shape torch.Size([192, 64]) from checkpoint, the shape in current model is torch.Size([576, 192]).
	size mismatch for network.0.model.0.0.mlp2.U1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.U2.weight: copying a param with shape torch.Size([24, 64]) from checkpoint, the shape in current model is torch.Size([72, 192]).
	size mismatch for network.0.model.0.0.mlp2.U2.bias: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([72]).
	size mismatch for network.0.model.0.0.mlp2.U3.weight: copying a param with shape torch.Size([192, 24]) from checkpoint, the shape in current model is torch.Size([576, 72]).
	size mismatch for network.0.model.0.0.mlp2.U3.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.C.weight: copying a param with shape torch.Size([64, 192]) from checkpoint, the shape in current model is torch.Size([192, 576]).
	size mismatch for network.0.model.0.0.mlp2.C.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.1.proj.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([192, 192, 3, 3]).
	size mismatch for network.1.proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.norm.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.norm.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm3.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.U1.weight: copying a param with shape torch.Size([128, 128]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.2.model.0.0.mlp1.U1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.U2.weight: copying a param with shape torch.Size([16, 128]) from checkpoint, the shape in current model is torch.Size([24, 192]).
	size mismatch for network.2.model.0.0.mlp1.U2.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for network.2.model.0.0.mlp1.U3.weight: copying a param with shape torch.Size([128, 16]) from checkpoint, the shape in current model is torch.Size([192, 24]).
	size mismatch for network.2.model.0.0.mlp1.U3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.C.weight: copying a param with shape torch.Size([128, 128]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.2.model.0.0.mlp1.C.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp2.norm1.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm3.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm3.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.U1.weight: copying a param with shape torch.Size([384, 128]) from checkpoint, the shape in current model is torch.Size([576, 192]).
	size mismatch for network.2.model.0.0.mlp2.U1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.U2.weight: copying a param with shape torch.Size([48, 128]) from checkpoint, the shape in current model is torch.Size([72, 192]).
	size mismatch for network.2.model.0.0.mlp2.U2.bias: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([72]).
	size mismatch for network.2.model.0.0.mlp2.U3.weight: copying a param with shape torch.Size([384, 48]) from checkpoint, the shape in current model is torch.Size([576, 72]).
	size mismatch for network.2.model.0.0.mlp2.U3.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.C.weight: copying a param with shape torch.Size([128, 384]) from checkpoint, the shape in current model is torch.Size([192, 576]).
	size mismatch for network.2.model.0.0.mlp2.C.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.3.proj.weight: copying a param with shape torch.Size([192, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([192, 192, 3, 3]).
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for MONet:
	Unexpected key(s) in state_dict: "network.0.model.1.0.norm.weight", "network.0.model.1.0.norm.bias", "network.0.model.1.0.mlp1.alpha", "network.0.model.1.0.mlp1.norm1.weight", "network.0.model.1.0.mlp1.norm1.bias", "network.0.model.1.0.mlp1.norm3.weight", "network.0.model.1.0.mlp1.norm3.bias", "network.0.model.1.0.mlp1.U1.weight", "network.0.model.1.0.mlp1.U1.bias", "network.0.model.1.0.mlp1.U2.weight", "network.0.model.1.0.mlp1.U2.bias", "network.0.model.1.0.mlp1.U3.weight", "network.0.model.1.0.mlp1.U3.bias", "network.0.model.1.0.mlp1.C.weight", "network.0.model.1.0.mlp1.C.bias", "network.0.model.1.0.mlp2.alpha", "network.0.model.1.0.mlp2.norm1.weight", "network.0.model.1.0.mlp2.norm1.bias", "network.0.model.1.0.mlp2.norm3.weight", "network.0.model.1.0.mlp2.norm3.bias", "network.0.model.1.0.mlp2.U1.weight", "network.0.model.1.0.mlp2.U1.bias", "network.0.model.1.0.mlp2.U2.weight", "network.0.model.1.0.mlp2.U2.bias", "network.0.model.1.0.mlp2.U3.weight", "network.0.model.1.0.mlp2.U3.bias", "network.0.model.1.0.mlp2.C.weight", "network.0.model.1.0.mlp2.C.bias", "network.0.model.2.0.norm.weight", "network.0.model.2.0.norm.bias", "network.0.model.2.0.mlp1.alpha", "network.0.model.2.0.mlp1.norm1.weight", "network.0.model.2.0.mlp1.norm1.bias", "network.0.model.2.0.mlp1.norm3.weight", "network.0.model.2.0.mlp1.norm3.bias", "network.0.model.2.0.mlp1.U1.weight", "network.0.model.2.0.mlp1.U1.bias", "network.0.model.2.0.mlp1.U2.weight", "network.0.model.2.0.mlp1.U2.bias", "network.0.model.2.0.mlp1.U3.weight", "network.0.model.2.0.mlp1.U3.bias", "network.0.model.2.0.mlp1.C.weight", "network.0.model.2.0.mlp1.C.bias", "network.0.model.2.0.mlp2.alpha", "network.0.model.2.0.mlp2.norm1.weight", "network.0.model.2.0.mlp2.norm1.bias", "network.0.model.2.0.mlp2.norm3.weight", "network.0.model.2.0.mlp2.norm3.bias", "network.0.model.2.0.mlp2.U1.weight", "network.0.model.2.0.mlp2.U1.bias", "network.0.model.2.0.mlp2.U2.weight", "network.0.model.2.0.mlp2.U2.bias", "network.0.model.2.0.mlp2.U3.weight", "network.0.model.2.0.mlp2.U3.bias", "network.0.model.2.0.mlp2.C.weight", "network.0.model.2.0.mlp2.C.bias", "network.0.model.3.0.norm.weight", "network.0.model.3.0.norm.bias", "network.0.model.3.0.mlp1.alpha", "network.0.model.3.0.mlp1.norm1.weight", "network.0.model.3.0.mlp1.norm1.bias", "network.0.model.3.0.mlp1.norm3.weight", "network.0.model.3.0.mlp1.norm3.bias", "network.0.model.3.0.mlp1.U1.weight", "network.0.model.3.0.mlp1.U1.bias", "network.0.model.3.0.mlp1.U2.weight", "network.0.model.3.0.mlp1.U2.bias", "network.0.model.3.0.mlp1.U3.weight", "network.0.model.3.0.mlp1.U3.bias", "network.0.model.3.0.mlp1.C.weight", "network.0.model.3.0.mlp1.C.bias", "network.0.model.3.0.mlp2.alpha", "network.0.model.3.0.mlp2.norm1.weight", "network.0.model.3.0.mlp2.norm1.bias", "network.0.model.3.0.mlp2.norm3.weight", "network.0.model.3.0.mlp2.norm3.bias", "network.0.model.3.0.mlp2.U1.weight", "network.0.model.3.0.mlp2.U1.bias", "network.0.model.3.0.mlp2.U2.weight", "network.0.model.3.0.mlp2.U2.bias", "network.0.model.3.0.mlp2.U3.weight", "network.0.model.3.0.mlp2.U3.bias", "network.0.model.3.0.mlp2.C.weight", "network.0.model.3.0.mlp2.C.bias", "network.2.model.1.0.norm.weight", "network.2.model.1.0.norm.bias", "network.2.model.1.0.mlp1.alpha", "network.2.model.1.0.mlp1.norm1.weight", "network.2.model.1.0.mlp1.norm1.bias", "network.2.model.1.0.mlp1.norm3.weight", "network.2.model.1.0.mlp1.norm3.bias", "network.2.model.1.0.mlp1.U1.weight", "network.2.model.1.0.mlp1.U1.bias", "network.2.model.1.0.mlp1.U2.weight", "network.2.model.1.0.mlp1.U2.bias", "network.2.model.1.0.mlp1.U3.weight", "network.2.model.1.0.mlp1.U3.bias", "network.2.model.1.0.mlp1.C.weight", "network.2.model.1.0.mlp1.C.bias", "network.2.model.1.0.mlp2.alpha", "network.2.model.1.0.mlp2.norm1.weight", "network.2.model.1.0.mlp2.norm1.bias", "network.2.model.1.0.mlp2.norm3.weight", "network.2.model.1.0.mlp2.norm3.bias", "network.2.model.1.0.mlp2.U1.weight", "network.2.model.1.0.mlp2.U1.bias", "network.2.model.1.0.mlp2.U2.weight", "network.2.model.1.0.mlp2.U2.bias", "network.2.model.1.0.mlp2.U3.weight", "network.2.model.1.0.mlp2.U3.bias", "network.2.model.1.0.mlp2.C.weight", "network.2.model.1.0.mlp2.C.bias", "network.2.model.2.0.norm.weight", "network.2.model.2.0.norm.bias", "network.2.model.2.0.mlp1.alpha", "network.2.model.2.0.mlp1.norm1.weight", "network.2.model.2.0.mlp1.norm1.bias", "network.2.model.2.0.mlp1.norm3.weight", "network.2.model.2.0.mlp1.norm3.bias", "network.2.model.2.0.mlp1.U1.weight", "network.2.model.2.0.mlp1.U1.bias", "network.2.model.2.0.mlp1.U2.weight", "network.2.model.2.0.mlp1.U2.bias", "network.2.model.2.0.mlp1.U3.weight", "network.2.model.2.0.mlp1.U3.bias", "network.2.model.2.0.mlp1.C.weight", "network.2.model.2.0.mlp1.C.bias", "network.2.model.2.0.mlp2.alpha", "network.2.model.2.0.mlp2.norm1.weight", "network.2.model.2.0.mlp2.norm1.bias", "network.2.model.2.0.mlp2.norm3.weight", "network.2.model.2.0.mlp2.norm3.bias", "network.2.model.2.0.mlp2.U1.weight", "network.2.model.2.0.mlp2.U1.bias", "network.2.model.2.0.mlp2.U2.weight", "network.2.model.2.0.mlp2.U2.bias", "network.2.model.2.0.mlp2.U3.weight", "network.2.model.2.0.mlp2.U3.bias", "network.2.model.2.0.mlp2.C.weight", "network.2.model.2.0.mlp2.C.bias", "network.2.model.3.0.norm.weight", "network.2.model.3.0.norm.bias", "network.2.model.3.0.mlp1.alpha", "network.2.model.3.0.mlp1.norm1.weight", "network.2.model.3.0.mlp1.norm1.bias", "network.2.model.3.0.mlp1.norm3.weight", "network.2.model.3.0.mlp1.norm3.bias", "network.2.model.3.0.mlp1.U1.weight", "network.2.model.3.0.mlp1.U1.bias", "network.2.model.3.0.mlp1.U2.weight", "network.2.model.3.0.mlp1.U2.bias", "network.2.model.3.0.mlp1.U3.weight", "network.2.model.3.0.mlp1.U3.bias", "network.2.model.3.0.mlp1.C.weight", "network.2.model.3.0.mlp1.C.bias", "network.2.model.3.0.mlp2.alpha", "network.2.model.3.0.mlp2.norm1.weight", "network.2.model.3.0.mlp2.norm1.bias", "network.2.model.3.0.mlp2.norm3.weight", "network.2.model.3.0.mlp2.norm3.bias", "network.2.model.3.0.mlp2.U1.weight", "network.2.model.3.0.mlp2.U1.bias", "network.2.model.3.0.mlp2.U2.weight", "network.2.model.3.0.mlp2.U2.bias", "network.2.model.3.0.mlp2.U3.weight", "network.2.model.3.0.mlp2.U3.bias", "network.2.model.3.0.mlp2.C.weight", "network.2.model.3.0.mlp2.C.bias", "network.2.model.4.0.norm.weight", "network.2.model.4.0.norm.bias", "network.2.model.4.0.mlp1.alpha", "network.2.model.4.0.mlp1.norm1.weight", "network.2.model.4.0.mlp1.norm1.bias", "network.2.model.4.0.mlp1.norm3.weight", "network.2.model.4.0.mlp1.norm3.bias", "network.2.model.4.0.mlp1.U1.weight", "network.2.model.4.0.mlp1.U1.bias", "network.2.model.4.0.mlp1.U2.weight", "network.2.model.4.0.mlp1.U2.bias", "network.2.model.4.0.mlp1.U3.weight", "network.2.model.4.0.mlp1.U3.bias", "network.2.model.4.0.mlp1.C.weight", "network.2.model.4.0.mlp1.C.bias", "network.2.model.4.0.mlp2.alpha", "network.2.model.4.0.mlp2.norm1.weight", "network.2.model.4.0.mlp2.norm1.bias", "network.2.model.4.0.mlp2.norm3.weight", "network.2.model.4.0.mlp2.norm3.bias", "network.2.model.4.0.mlp2.U1.weight", "network.2.model.4.0.mlp2.U1.bias", "network.2.model.4.0.mlp2.U2.weight", "network.2.model.4.0.mlp2.U2.bias", "network.2.model.4.0.mlp2.U3.weight", "network.2.model.4.0.mlp2.U3.bias", "network.2.model.4.0.mlp2.C.weight", "network.2.model.4.0.mlp2.C.bias", "network.2.model.5.0.norm.weight", "network.2.model.5.0.norm.bias", "network.2.model.5.0.mlp1.alpha", "network.2.model.5.0.mlp1.norm1.weight", "network.2.model.5.0.mlp1.norm1.bias", "network.2.model.5.0.mlp1.norm3.weight", "network.2.model.5.0.mlp1.norm3.bias", "network.2.model.5.0.mlp1.U1.weight", "network.2.model.5.0.mlp1.U1.bias", "network.2.model.5.0.mlp1.U2.weight", "network.2.model.5.0.mlp1.U2.bias", "network.2.model.5.0.mlp1.U3.weight", "network.2.model.5.0.mlp1.U3.bias", "network.2.model.5.0.mlp1.C.weight", "network.2.model.5.0.mlp1.C.bias", "network.2.model.5.0.mlp2.alpha", "network.2.model.5.0.mlp2.norm1.weight", "network.2.model.5.0.mlp2.norm1.bias", "network.2.model.5.0.mlp2.norm3.weight", "network.2.model.5.0.mlp2.norm3.bias", "network.2.model.5.0.mlp2.U1.weight", "network.2.model.5.0.mlp2.U1.bias", "network.2.model.5.0.mlp2.U2.weight", "network.2.model.5.0.mlp2.U2.bias", "network.2.model.5.0.mlp2.U3.weight", "network.2.model.5.0.mlp2.U3.bias", "network.2.model.5.0.mlp2.C.weight", "network.2.model.5.0.mlp2.C.bias", "network.2.model.6.0.norm.weight", "network.2.model.6.0.norm.bias", "network.2.model.6.0.mlp1.alpha", "network.2.model.6.0.mlp1.norm1.weight", "network.2.model.6.0.mlp1.norm1.bias", "network.2.model.6.0.mlp1.norm3.weight", "network.2.model.6.0.mlp1.norm3.bias", "network.2.model.6.0.mlp1.U1.weight", "network.2.model.6.0.mlp1.U1.bias", "network.2.model.6.0.mlp1.U2.weight", "network.2.model.6.0.mlp1.U2.bias", "network.2.model.6.0.mlp1.U3.weight", "network.2.model.6.0.mlp1.U3.bias", "network.2.model.6.0.mlp1.C.weight", "network.2.model.6.0.mlp1.C.bias", "network.2.model.6.0.mlp2.alpha", "network.2.model.6.0.mlp2.norm1.weight", "network.2.model.6.0.mlp2.norm1.bias", "network.2.model.6.0.mlp2.norm3.weight", "network.2.model.6.0.mlp2.norm3.bias", "network.2.model.6.0.mlp2.U1.weight", "network.2.model.6.0.mlp2.U1.bias", "network.2.model.6.0.mlp2.U2.weight", "network.2.model.6.0.mlp2.U2.bias", "network.2.model.6.0.mlp2.U3.weight", "network.2.model.6.0.mlp2.U3.bias", "network.2.model.6.0.mlp2.C.weight", "network.2.model.6.0.mlp2.C.bias", "network.2.model.7.0.norm.weight", "network.2.model.7.0.norm.bias", "network.2.model.7.0.mlp1.alpha", "network.2.model.7.0.mlp1.norm1.weight", "network.2.model.7.0.mlp1.norm1.bias", "network.2.model.7.0.mlp1.norm3.weight", "network.2.model.7.0.mlp1.norm3.bias", "network.2.model.7.0.mlp1.U1.weight", "network.2.model.7.0.mlp1.U1.bias", "network.2.model.7.0.mlp1.U2.weight", "network.2.model.7.0.mlp1.U2.bias", "network.2.model.7.0.mlp1.U3.weight", "network.2.model.7.0.mlp1.U3.bias", "network.2.model.7.0.mlp1.C.weight", "network.2.model.7.0.mlp1.C.bias", "network.2.model.7.0.mlp2.alpha", "network.2.model.7.0.mlp2.norm1.weight", "network.2.model.7.0.mlp2.norm1.bias", "network.2.model.7.0.mlp2.norm3.weight", "network.2.model.7.0.mlp2.norm3.bias", "network.2.model.7.0.mlp2.U1.weight", "network.2.model.7.0.mlp2.U1.bias", "network.2.model.7.0.mlp2.U2.weight", "network.2.model.7.0.mlp2.U2.bias", "network.2.model.7.0.mlp2.U3.weight", "network.2.model.7.0.mlp2.U3.bias", "network.2.model.7.0.mlp2.C.weight", "network.2.model.7.0.mlp2.C.bias", "network.4.model.1.0.norm.weight", "network.4.model.1.0.norm.bias", "network.4.model.1.0.mlp1.alpha", "network.4.model.1.0.mlp1.norm1.weight", "network.4.model.1.0.mlp1.norm1.bias", "network.4.model.1.0.mlp1.norm3.weight", "network.4.model.1.0.mlp1.norm3.bias", "network.4.model.1.0.mlp1.U1.weight", "network.4.model.1.0.mlp1.U1.bias", "network.4.model.1.0.mlp1.U2.weight", "network.4.model.1.0.mlp1.U2.bias", "network.4.model.1.0.mlp1.U3.weight", "network.4.model.1.0.mlp1.U3.bias", "network.4.model.1.0.mlp1.C.weight", "network.4.model.1.0.mlp1.C.bias", "network.4.model.1.0.mlp2.alpha", "network.4.model.1.0.mlp2.norm1.weight", "network.4.model.1.0.mlp2.norm1.bias", "network.4.model.1.0.mlp2.norm3.weight", "network.4.model.1.0.mlp2.norm3.bias", "network.4.model.1.0.mlp2.U1.weight", "network.4.model.1.0.mlp2.U1.bias", "network.4.model.1.0.mlp2.U2.weight", "network.4.model.1.0.mlp2.U2.bias", "network.4.model.1.0.mlp2.U3.weight", "network.4.model.1.0.mlp2.U3.bias", "network.4.model.1.0.mlp2.C.weight", "network.4.model.1.0.mlp2.C.bias", "network.4.model.2.0.norm.weight", "network.4.model.2.0.norm.bias", "network.4.model.2.0.mlp1.alpha", "network.4.model.2.0.mlp1.norm1.weight", "network.4.model.2.0.mlp1.norm1.bias", "network.4.model.2.0.mlp1.norm3.weight", "network.4.model.2.0.mlp1.norm3.bias", "network.4.model.2.0.mlp1.U1.weight", "network.4.model.2.0.mlp1.U1.bias", "network.4.model.2.0.mlp1.U2.weight", "network.4.model.2.0.mlp1.U2.bias", "network.4.model.2.0.mlp1.U3.weight", "network.4.model.2.0.mlp1.U3.bias", "network.4.model.2.0.mlp1.C.weight", "network.4.model.2.0.mlp1.C.bias", "network.4.model.2.0.mlp2.alpha", "network.4.model.2.0.mlp2.norm1.weight", "network.4.model.2.0.mlp2.norm1.bias", "network.4.model.2.0.mlp2.norm3.weight", "network.4.model.2.0.mlp2.norm3.bias", "network.4.model.2.0.mlp2.U1.weight", "network.4.model.2.0.mlp2.U1.bias", "network.4.model.2.0.mlp2.U2.weight", "network.4.model.2.0.mlp2.U2.bias", "network.4.model.2.0.mlp2.U3.weight", "network.4.model.2.0.mlp2.U3.bias", "network.4.model.2.0.mlp2.C.weight", "network.4.model.2.0.mlp2.C.bias", "network.4.model.3.0.norm.weight", "network.4.model.3.0.norm.bias", "network.4.model.3.0.mlp1.alpha", "network.4.model.3.0.mlp1.norm1.weight", "network.4.model.3.0.mlp1.norm1.bias", "network.4.model.3.0.mlp1.norm3.weight", "network.4.model.3.0.mlp1.norm3.bias", "network.4.model.3.0.mlp1.U1.weight", "network.4.model.3.0.mlp1.U1.bias", "network.4.model.3.0.mlp1.U2.weight", "network.4.model.3.0.mlp1.U2.bias", "network.4.model.3.0.mlp1.U3.weight", "network.4.model.3.0.mlp1.U3.bias", "network.4.model.3.0.mlp1.C.weight", "network.4.model.3.0.mlp1.C.bias", "network.4.model.3.0.mlp2.alpha", "network.4.model.3.0.mlp2.norm1.weight", "network.4.model.3.0.mlp2.norm1.bias", "network.4.model.3.0.mlp2.norm3.weight", "network.4.model.3.0.mlp2.norm3.bias", "network.4.model.3.0.mlp2.U1.weight", "network.4.model.3.0.mlp2.U1.bias", "network.4.model.3.0.mlp2.U2.weight", "network.4.model.3.0.mlp2.U2.bias", "network.4.model.3.0.mlp2.U3.weight", "network.4.model.3.0.mlp2.U3.bias", "network.4.model.3.0.mlp2.C.weight", "network.4.model.3.0.mlp2.C.bias", "network.4.model.4.0.norm.weight", "network.4.model.4.0.norm.bias", "network.4.model.4.0.mlp1.alpha", "network.4.model.4.0.mlp1.norm1.weight", "network.4.model.4.0.mlp1.norm1.bias", "network.4.model.4.0.mlp1.norm3.weight", "network.4.model.4.0.mlp1.norm3.bias", "network.4.model.4.0.mlp1.U1.weight", "network.4.model.4.0.mlp1.U1.bias", "network.4.model.4.0.mlp1.U2.weight", "network.4.model.4.0.mlp1.U2.bias", "network.4.model.4.0.mlp1.U3.weight", "network.4.model.4.0.mlp1.U3.bias", "network.4.model.4.0.mlp1.C.weight", "network.4.model.4.0.mlp1.C.bias", "network.4.model.4.0.mlp2.alpha", "network.4.model.4.0.mlp2.norm1.weight", "network.4.model.4.0.mlp2.norm1.bias", "network.4.model.4.0.mlp2.norm3.weight", "network.4.model.4.0.mlp2.norm3.bias", "network.4.model.4.0.mlp2.U1.weight", "network.4.model.4.0.mlp2.U1.bias", "network.4.model.4.0.mlp2.U2.weight", "network.4.model.4.0.mlp2.U2.bias", "network.4.model.4.0.mlp2.U3.weight", "network.4.model.4.0.mlp2.U3.bias", "network.4.model.4.0.mlp2.C.weight", "network.4.model.4.0.mlp2.C.bias", "network.4.model.5.0.norm.weight", "network.4.model.5.0.norm.bias", "network.4.model.5.0.mlp1.alpha", "network.4.model.5.0.mlp1.norm1.weight", "network.4.model.5.0.mlp1.norm1.bias", "network.4.model.5.0.mlp1.norm3.weight", "network.4.model.5.0.mlp1.norm3.bias", "network.4.model.5.0.mlp1.U1.weight", "network.4.model.5.0.mlp1.U1.bias", "network.4.model.5.0.mlp1.U2.weight", "network.4.model.5.0.mlp1.U2.bias", "network.4.model.5.0.mlp1.U3.weight", "network.4.model.5.0.mlp1.U3.bias", "network.4.model.5.0.mlp1.C.weight", "network.4.model.5.0.mlp1.C.bias", "network.4.model.5.0.mlp2.alpha", "network.4.model.5.0.mlp2.norm1.weight", "network.4.model.5.0.mlp2.norm1.bias", "network.4.model.5.0.mlp2.norm3.weight", "network.4.model.5.0.mlp2.norm3.bias", "network.4.model.5.0.mlp2.U1.weight", "network.4.model.5.0.mlp2.U1.bias", "network.4.model.5.0.mlp2.U2.weight", "network.4.model.5.0.mlp2.U2.bias", "network.4.model.5.0.mlp2.U3.weight", "network.4.model.5.0.mlp2.U3.bias", "network.4.model.5.0.mlp2.C.weight", "network.4.model.5.0.mlp2.C.bias", "network.4.model.6.0.norm.weight", "network.4.model.6.0.norm.bias", "network.4.model.6.0.mlp1.alpha", "network.4.model.6.0.mlp1.norm1.weight", "network.4.model.6.0.mlp1.norm1.bias", "network.4.model.6.0.mlp1.norm3.weight", "network.4.model.6.0.mlp1.norm3.bias", "network.4.model.6.0.mlp1.U1.weight", "network.4.model.6.0.mlp1.U1.bias", "network.4.model.6.0.mlp1.U2.weight", "network.4.model.6.0.mlp1.U2.bias", "network.4.model.6.0.mlp1.U3.weight", "network.4.model.6.0.mlp1.U3.bias", "network.4.model.6.0.mlp1.C.weight", "network.4.model.6.0.mlp1.C.bias", "network.4.model.6.0.mlp2.alpha", "network.4.model.6.0.mlp2.norm1.weight", "network.4.model.6.0.mlp2.norm1.bias", "network.4.model.6.0.mlp2.norm3.weight", "network.4.model.6.0.mlp2.norm3.bias", "network.4.model.6.0.mlp2.U1.weight", "network.4.model.6.0.mlp2.U1.bias", "network.4.model.6.0.mlp2.U2.weight", "network.4.model.6.0.mlp2.U2.bias", "network.4.model.6.0.mlp2.U3.weight", "network.4.model.6.0.mlp2.U3.bias", "network.4.model.6.0.mlp2.C.weight", "network.4.model.6.0.mlp2.C.bias", "network.4.model.7.0.norm.weight", "network.4.model.7.0.norm.bias", "network.4.model.7.0.mlp1.alpha", "network.4.model.7.0.mlp1.norm1.weight", "network.4.model.7.0.mlp1.norm1.bias", "network.4.model.7.0.mlp1.norm3.weight", "network.4.model.7.0.mlp1.norm3.bias", "network.4.model.7.0.mlp1.U1.weight", "network.4.model.7.0.mlp1.U1.bias", "network.4.model.7.0.mlp1.U2.weight", "network.4.model.7.0.mlp1.U2.bias", "network.4.model.7.0.mlp1.U3.weight", "network.4.model.7.0.mlp1.U3.bias", "network.4.model.7.0.mlp1.C.weight", "network.4.model.7.0.mlp1.C.bias", "network.4.model.7.0.mlp2.alpha", "network.4.model.7.0.mlp2.norm1.weight", "network.4.model.7.0.mlp2.norm1.bias", "network.4.model.7.0.mlp2.norm3.weight", "network.4.model.7.0.mlp2.norm3.bias", "network.4.model.7.0.mlp2.U1.weight", "network.4.model.7.0.mlp2.U1.bias", "network.4.model.7.0.mlp2.U2.weight", "network.4.model.7.0.mlp2.U2.bias", "network.4.model.7.0.mlp2.U3.weight", "network.4.model.7.0.mlp2.U3.bias", "network.4.model.7.0.mlp2.C.weight", "network.4.model.7.0.mlp2.C.bias", "network.4.model.8.0.norm.weight", "network.4.model.8.0.norm.bias", "network.4.model.8.0.mlp1.alpha", "network.4.model.8.0.mlp1.norm1.weight", "network.4.model.8.0.mlp1.norm1.bias", "network.4.model.8.0.mlp1.norm3.weight", "network.4.model.8.0.mlp1.norm3.bias", "network.4.model.8.0.mlp1.U1.weight", "network.4.model.8.0.mlp1.U1.bias", "network.4.model.8.0.mlp1.U2.weight", "network.4.model.8.0.mlp1.U2.bias", "network.4.model.8.0.mlp1.U3.weight", "network.4.model.8.0.mlp1.U3.bias", "network.4.model.8.0.mlp1.C.weight", "network.4.model.8.0.mlp1.C.bias", "network.4.model.8.0.mlp2.alpha", "network.4.model.8.0.mlp2.norm1.weight", "network.4.model.8.0.mlp2.norm1.bias", "network.4.model.8.0.mlp2.norm3.weight", "network.4.model.8.0.mlp2.norm3.bias", "network.4.model.8.0.mlp2.U1.weight", "network.4.model.8.0.mlp2.U1.bias", "network.4.model.8.0.mlp2.U2.weight", "network.4.model.8.0.mlp2.U2.bias", "network.4.model.8.0.mlp2.U3.weight", "network.4.model.8.0.mlp2.U3.bias", "network.4.model.8.0.mlp2.C.weight", "network.4.model.8.0.mlp2.C.bias", "network.4.model.9.0.norm.weight", "network.4.model.9.0.norm.bias", "network.4.model.9.0.mlp1.alpha", "network.4.model.9.0.mlp1.norm1.weight", "network.4.model.9.0.mlp1.norm1.bias", "network.4.model.9.0.mlp1.norm3.weight", "network.4.model.9.0.mlp1.norm3.bias", "network.4.model.9.0.mlp1.U1.weight", "network.4.model.9.0.mlp1.U1.bias", "network.4.model.9.0.mlp1.U2.weight", "network.4.model.9.0.mlp1.U2.bias", "network.4.model.9.0.mlp1.U3.weight", "network.4.model.9.0.mlp1.U3.bias", "network.4.model.9.0.mlp1.C.weight", "network.4.model.9.0.mlp1.C.bias", "network.4.model.9.0.mlp2.alpha", "network.4.model.9.0.mlp2.norm1.weight", "network.4.model.9.0.mlp2.norm1.bias", "network.4.model.9.0.mlp2.norm3.weight", "network.4.model.9.0.mlp2.norm3.bias", "network.4.model.9.0.mlp2.U1.weight", "network.4.model.9.0.mlp2.U1.bias", "network.4.model.9.0.mlp2.U2.weight", "network.4.model.9.0.mlp2.U2.bias", "network.4.model.9.0.mlp2.U3.weight", "network.4.model.9.0.mlp2.U3.bias", "network.4.model.9.0.mlp2.C.weight", "network.4.model.9.0.mlp2.C.bias", "network.4.model.10.0.norm.weight", "network.4.model.10.0.norm.bias", "network.4.model.10.0.mlp1.alpha", "network.4.model.10.0.mlp1.norm1.weight", "network.4.model.10.0.mlp1.norm1.bias", "network.4.model.10.0.mlp1.norm3.weight", "network.4.model.10.0.mlp1.norm3.bias", "network.4.model.10.0.mlp1.U1.weight", "network.4.model.10.0.mlp1.U1.bias", "network.4.model.10.0.mlp1.U2.weight", "network.4.model.10.0.mlp1.U2.bias", "network.4.model.10.0.mlp1.U3.weight", "network.4.model.10.0.mlp1.U3.bias", "network.4.model.10.0.mlp1.C.weight", "network.4.model.10.0.mlp1.C.bias", "network.4.model.10.0.mlp2.alpha", "network.4.model.10.0.mlp2.norm1.weight", "network.4.model.10.0.mlp2.norm1.bias", "network.4.model.10.0.mlp2.norm3.weight", "network.4.model.10.0.mlp2.norm3.bias", "network.4.model.10.0.mlp2.U1.weight", "network.4.model.10.0.mlp2.U1.bias", "network.4.model.10.0.mlp2.U2.weight", "network.4.model.10.0.mlp2.U2.bias", "network.4.model.10.0.mlp2.U3.weight", "network.4.model.10.0.mlp2.U3.bias", "network.4.model.10.0.mlp2.C.weight", "network.4.model.10.0.mlp2.C.bias", "network.4.model.11.0.norm.weight", "network.4.model.11.0.norm.bias", "network.4.model.11.0.mlp1.alpha", "network.4.model.11.0.mlp1.norm1.weight", "network.4.model.11.0.mlp1.norm1.bias", "network.4.model.11.0.mlp1.norm3.weight", "network.4.model.11.0.mlp1.norm3.bias", "network.4.model.11.0.mlp1.U1.weight", "network.4.model.11.0.mlp1.U1.bias", "network.4.model.11.0.mlp1.U2.weight", "network.4.model.11.0.mlp1.U2.bias", "network.4.model.11.0.mlp1.U3.weight", "network.4.model.11.0.mlp1.U3.bias", "network.4.model.11.0.mlp1.C.weight", "network.4.model.11.0.mlp1.C.bias", "network.4.model.11.0.mlp2.alpha", "network.4.model.11.0.mlp2.norm1.weight", "network.4.model.11.0.mlp2.norm1.bias", "network.4.model.11.0.mlp2.norm3.weight", "network.4.model.11.0.mlp2.norm3.bias", "network.4.model.11.0.mlp2.U1.weight", "network.4.model.11.0.mlp2.U1.bias", "network.4.model.11.0.mlp2.U2.weight", "network.4.model.11.0.mlp2.U2.bias", "network.4.model.11.0.mlp2.U3.weight", "network.4.model.11.0.mlp2.U3.bias", "network.4.model.11.0.mlp2.C.weight", "network.4.model.11.0.mlp2.C.bias", "network.6.model.1.0.norm.weight", "network.6.model.1.0.norm.bias", "network.6.model.1.0.mlp1.alpha", "network.6.model.1.0.mlp1.norm1.weight", "network.6.model.1.0.mlp1.norm1.bias", "network.6.model.1.0.mlp1.norm3.weight", "network.6.model.1.0.mlp1.norm3.bias", "network.6.model.1.0.mlp1.U1.weight", "network.6.model.1.0.mlp1.U1.bias", "network.6.model.1.0.mlp1.U2.weight", "network.6.model.1.0.mlp1.U2.bias", "network.6.model.1.0.mlp1.U3.weight", "network.6.model.1.0.mlp1.U3.bias", "network.6.model.1.0.mlp1.C.weight", "network.6.model.1.0.mlp1.C.bias", "network.6.model.1.0.mlp2.alpha", "network.6.model.1.0.mlp2.norm1.weight", "network.6.model.1.0.mlp2.norm1.bias", "network.6.model.1.0.mlp2.norm3.weight", "network.6.model.1.0.mlp2.norm3.bias", "network.6.model.1.0.mlp2.U1.weight", "network.6.model.1.0.mlp2.U1.bias", "network.6.model.1.0.mlp2.U2.weight", "network.6.model.1.0.mlp2.U2.bias", "network.6.model.1.0.mlp2.U3.weight", "network.6.model.1.0.mlp2.U3.bias", "network.6.model.1.0.mlp2.C.weight", "network.6.model.1.0.mlp2.C.bias", "network.6.model.2.0.norm.weight", "network.6.model.2.0.norm.bias", "network.6.model.2.0.mlp1.alpha", "network.6.model.2.0.mlp1.norm1.weight", "network.6.model.2.0.mlp1.norm1.bias", "network.6.model.2.0.mlp1.norm3.weight", "network.6.model.2.0.mlp1.norm3.bias", "network.6.model.2.0.mlp1.U1.weight", "network.6.model.2.0.mlp1.U1.bias", "network.6.model.2.0.mlp1.U2.weight", "network.6.model.2.0.mlp1.U2.bias", "network.6.model.2.0.mlp1.U3.weight", "network.6.model.2.0.mlp1.U3.bias", "network.6.model.2.0.mlp1.C.weight", "network.6.model.2.0.mlp1.C.bias", "network.6.model.2.0.mlp2.alpha", "network.6.model.2.0.mlp2.norm1.weight", "network.6.model.2.0.mlp2.norm1.bias", "network.6.model.2.0.mlp2.norm3.weight", "network.6.model.2.0.mlp2.norm3.bias", "network.6.model.2.0.mlp2.U1.weight", "network.6.model.2.0.mlp2.U1.bias", "network.6.model.2.0.mlp2.U2.weight", "network.6.model.2.0.mlp2.U2.bias", "network.6.model.2.0.mlp2.U3.weight", "network.6.model.2.0.mlp2.U3.bias", "network.6.model.2.0.mlp2.C.weight", "network.6.model.2.0.mlp2.C.bias", "network.6.model.3.0.norm.weight", "network.6.model.3.0.norm.bias", "network.6.model.3.0.mlp1.alpha", "network.6.model.3.0.mlp1.norm1.weight", "network.6.model.3.0.mlp1.norm1.bias", "network.6.model.3.0.mlp1.norm3.weight", "network.6.model.3.0.mlp1.norm3.bias", "network.6.model.3.0.mlp1.U1.weight", "network.6.model.3.0.mlp1.U1.bias", "network.6.model.3.0.mlp1.U2.weight", "network.6.model.3.0.mlp1.U2.bias", "network.6.model.3.0.mlp1.U3.weight", "network.6.model.3.0.mlp1.U3.bias", "network.6.model.3.0.mlp1.C.weight", "network.6.model.3.0.mlp1.C.bias", "network.6.model.3.0.mlp2.alpha", "network.6.model.3.0.mlp2.norm1.weight", "network.6.model.3.0.mlp2.norm1.bias", "network.6.model.3.0.mlp2.norm3.weight", "network.6.model.3.0.mlp2.norm3.bias", "network.6.model.3.0.mlp2.U1.weight", "network.6.model.3.0.mlp2.U1.bias", "network.6.model.3.0.mlp2.U2.weight", "network.6.model.3.0.mlp2.U2.bias", "network.6.model.3.0.mlp2.U3.weight", "network.6.model.3.0.mlp2.U3.bias", "network.6.model.3.0.mlp2.C.weight", "network.6.model.3.0.mlp2.C.bias", "network.6.model.4.0.norm.weight", "network.6.model.4.0.norm.bias", "network.6.model.4.0.mlp1.alpha", "network.6.model.4.0.mlp1.norm1.weight", "network.6.model.4.0.mlp1.norm1.bias", "network.6.model.4.0.mlp1.norm3.weight", "network.6.model.4.0.mlp1.norm3.bias", "network.6.model.4.0.mlp1.U1.weight", "network.6.model.4.0.mlp1.U1.bias", "network.6.model.4.0.mlp1.U2.weight", "network.6.model.4.0.mlp1.U2.bias", "network.6.model.4.0.mlp1.U3.weight", "network.6.model.4.0.mlp1.U3.bias", "network.6.model.4.0.mlp1.C.weight", "network.6.model.4.0.mlp1.C.bias", "network.6.model.4.0.mlp2.alpha", "network.6.model.4.0.mlp2.norm1.weight", "network.6.model.4.0.mlp2.norm1.bias", "network.6.model.4.0.mlp2.norm3.weight", "network.6.model.4.0.mlp2.norm3.bias", "network.6.model.4.0.mlp2.U1.weight", "network.6.model.4.0.mlp2.U1.bias", "network.6.model.4.0.mlp2.U2.weight", "network.6.model.4.0.mlp2.U2.bias", "network.6.model.4.0.mlp2.U3.weight", "network.6.model.4.0.mlp2.U3.bias", "network.6.model.4.0.mlp2.C.weight", "network.6.model.4.0.mlp2.C.bias", "network.6.model.5.0.norm.weight", "network.6.model.5.0.norm.bias", "network.6.model.5.0.mlp1.alpha", "network.6.model.5.0.mlp1.norm1.weight", "network.6.model.5.0.mlp1.norm1.bias", "network.6.model.5.0.mlp1.norm3.weight", "network.6.model.5.0.mlp1.norm3.bias", "network.6.model.5.0.mlp1.U1.weight", "network.6.model.5.0.mlp1.U1.bias", "network.6.model.5.0.mlp1.U2.weight", "network.6.model.5.0.mlp1.U2.bias", "network.6.model.5.0.mlp1.U3.weight", "network.6.model.5.0.mlp1.U3.bias", "network.6.model.5.0.mlp1.C.weight", "network.6.model.5.0.mlp1.C.bias", "network.6.model.5.0.mlp2.alpha", "network.6.model.5.0.mlp2.norm1.weight", "network.6.model.5.0.mlp2.norm1.bias", "network.6.model.5.0.mlp2.norm3.weight", "network.6.model.5.0.mlp2.norm3.bias", "network.6.model.5.0.mlp2.U1.weight", "network.6.model.5.0.mlp2.U1.bias", "network.6.model.5.0.mlp2.U2.weight", "network.6.model.5.0.mlp2.U2.bias", "network.6.model.5.0.mlp2.U3.weight", "network.6.model.5.0.mlp2.U3.bias", "network.6.model.5.0.mlp2.C.weight", "network.6.model.5.0.mlp2.C.bias", "network.6.model.6.0.norm.weight", "network.6.model.6.0.norm.bias", "network.6.model.6.0.mlp1.alpha", "network.6.model.6.0.mlp1.norm1.weight", "network.6.model.6.0.mlp1.norm1.bias", "network.6.model.6.0.mlp1.norm3.weight", "network.6.model.6.0.mlp1.norm3.bias", "network.6.model.6.0.mlp1.U1.weight", "network.6.model.6.0.mlp1.U1.bias", "network.6.model.6.0.mlp1.U2.weight", "network.6.model.6.0.mlp1.U2.bias", "network.6.model.6.0.mlp1.U3.weight", "network.6.model.6.0.mlp1.U3.bias", "network.6.model.6.0.mlp1.C.weight", "network.6.model.6.0.mlp1.C.bias", "network.6.model.6.0.mlp2.alpha", "network.6.model.6.0.mlp2.norm1.weight", "network.6.model.6.0.mlp2.norm1.bias", "network.6.model.6.0.mlp2.norm3.weight", "network.6.model.6.0.mlp2.norm3.bias", "network.6.model.6.0.mlp2.U1.weight", "network.6.model.6.0.mlp2.U1.bias", "network.6.model.6.0.mlp2.U2.weight", "network.6.model.6.0.mlp2.U2.bias", "network.6.model.6.0.mlp2.U3.weight", "network.6.model.6.0.mlp2.U3.bias", "network.6.model.6.0.mlp2.C.weight", "network.6.model.6.0.mlp2.C.bias", "network.6.model.7.0.norm.weight", "network.6.model.7.0.norm.bias", "network.6.model.7.0.mlp1.alpha", "network.6.model.7.0.mlp1.norm1.weight", "network.6.model.7.0.mlp1.norm1.bias", "network.6.model.7.0.mlp1.norm3.weight", "network.6.model.7.0.mlp1.norm3.bias", "network.6.model.7.0.mlp1.U1.weight", "network.6.model.7.0.mlp1.U1.bias", "network.6.model.7.0.mlp1.U2.weight", "network.6.model.7.0.mlp1.U2.bias", "network.6.model.7.0.mlp1.U3.weight", "network.6.model.7.0.mlp1.U3.bias", "network.6.model.7.0.mlp1.C.weight", "network.6.model.7.0.mlp1.C.bias", "network.6.model.7.0.mlp2.alpha", "network.6.model.7.0.mlp2.norm1.weight", "network.6.model.7.0.mlp2.norm1.bias", "network.6.model.7.0.mlp2.norm3.weight", "network.6.model.7.0.mlp2.norm3.bias", "network.6.model.7.0.mlp2.U1.weight", "network.6.model.7.0.mlp2.U1.bias", "network.6.model.7.0.mlp2.U2.weight", "network.6.model.7.0.mlp2.U2.bias", "network.6.model.7.0.mlp2.U3.weight", "network.6.model.7.0.mlp2.U3.bias", "network.6.model.7.0.mlp2.C.weight", "network.6.model.7.0.mlp2.C.bias", "network.6.model.8.0.norm.weight", "network.6.model.8.0.norm.bias", "network.6.model.8.0.mlp1.alpha", "network.6.model.8.0.mlp1.norm1.weight", "network.6.model.8.0.mlp1.norm1.bias", "network.6.model.8.0.mlp1.norm3.weight", "network.6.model.8.0.mlp1.norm3.bias", "network.6.model.8.0.mlp1.U1.weight", "network.6.model.8.0.mlp1.U1.bias", "network.6.model.8.0.mlp1.U2.weight", "network.6.model.8.0.mlp1.U2.bias", "network.6.model.8.0.mlp1.U3.weight", "network.6.model.8.0.mlp1.U3.bias", "network.6.model.8.0.mlp1.C.weight", "network.6.model.8.0.mlp1.C.bias", "network.6.model.8.0.mlp2.alpha", "network.6.model.8.0.mlp2.norm1.weight", "network.6.model.8.0.mlp2.norm1.bias", "network.6.model.8.0.mlp2.norm3.weight", "network.6.model.8.0.mlp2.norm3.bias", "network.6.model.8.0.mlp2.U1.weight", "network.6.model.8.0.mlp2.U1.bias", "network.6.model.8.0.mlp2.U2.weight", "network.6.model.8.0.mlp2.U2.bias", "network.6.model.8.0.mlp2.U3.weight", "network.6.model.8.0.mlp2.U3.bias", "network.6.model.8.0.mlp2.C.weight", "network.6.model.8.0.mlp2.C.bias", "network.6.model.9.0.norm.weight", "network.6.model.9.0.norm.bias", "network.6.model.9.0.mlp1.alpha", "network.6.model.9.0.mlp1.norm1.weight", "network.6.model.9.0.mlp1.norm1.bias", "network.6.model.9.0.mlp1.norm3.weight", "network.6.model.9.0.mlp1.norm3.bias", "network.6.model.9.0.mlp1.U1.weight", "network.6.model.9.0.mlp1.U1.bias", "network.6.model.9.0.mlp1.U2.weight", "network.6.model.9.0.mlp1.U2.bias", "network.6.model.9.0.mlp1.U3.weight", "network.6.model.9.0.mlp1.U3.bias", "network.6.model.9.0.mlp1.C.weight", "network.6.model.9.0.mlp1.C.bias", "network.6.model.9.0.mlp2.alpha", "network.6.model.9.0.mlp2.norm1.weight", "network.6.model.9.0.mlp2.norm1.bias", "network.6.model.9.0.mlp2.norm3.weight", "network.6.model.9.0.mlp2.norm3.bias", "network.6.model.9.0.mlp2.U1.weight", "network.6.model.9.0.mlp2.U1.bias", "network.6.model.9.0.mlp2.U2.weight", "network.6.model.9.0.mlp2.U2.bias", "network.6.model.9.0.mlp2.U3.weight", "network.6.model.9.0.mlp2.U3.bias", "network.6.model.9.0.mlp2.C.weight", "network.6.model.9.0.mlp2.C.bias". 
	size mismatch for fs.weight: copying a param with shape torch.Size([64, 3, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 3, 2, 2]).
	size mismatch for fs.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for fs2.weight: copying a param with shape torch.Size([64, 64, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for fs2.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.norm.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.norm.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm3.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.norm3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.U1.weight: copying a param with shape torch.Size([64, 64]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.0.model.0.0.mlp1.U1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.U2.weight: copying a param with shape torch.Size([8, 64]) from checkpoint, the shape in current model is torch.Size([24, 192]).
	size mismatch for network.0.model.0.0.mlp1.U2.bias: copying a param with shape torch.Size([8]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for network.0.model.0.0.mlp1.U3.weight: copying a param with shape torch.Size([64, 8]) from checkpoint, the shape in current model is torch.Size([192, 24]).
	size mismatch for network.0.model.0.0.mlp1.U3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp1.C.weight: copying a param with shape torch.Size([64, 64]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.0.model.0.0.mlp1.C.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.0.model.0.0.mlp2.norm1.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm3.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.norm3.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.U1.weight: copying a param with shape torch.Size([192, 64]) from checkpoint, the shape in current model is torch.Size([576, 192]).
	size mismatch for network.0.model.0.0.mlp2.U1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.U2.weight: copying a param with shape torch.Size([24, 64]) from checkpoint, the shape in current model is torch.Size([72, 192]).
	size mismatch for network.0.model.0.0.mlp2.U2.bias: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([72]).
	size mismatch for network.0.model.0.0.mlp2.U3.weight: copying a param with shape torch.Size([192, 24]) from checkpoint, the shape in current model is torch.Size([576, 72]).
	size mismatch for network.0.model.0.0.mlp2.U3.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.0.model.0.0.mlp2.C.weight: copying a param with shape torch.Size([64, 192]) from checkpoint, the shape in current model is torch.Size([192, 576]).
	size mismatch for network.0.model.0.0.mlp2.C.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.1.proj.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([192, 192, 3, 3]).
	size mismatch for network.1.proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.norm.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.norm.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm3.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.norm3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.U1.weight: copying a param with shape torch.Size([128, 128]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.2.model.0.0.mlp1.U1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.U2.weight: copying a param with shape torch.Size([16, 128]) from checkpoint, the shape in current model is torch.Size([24, 192]).
	size mismatch for network.2.model.0.0.mlp1.U2.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for network.2.model.0.0.mlp1.U3.weight: copying a param with shape torch.Size([128, 16]) from checkpoint, the shape in current model is torch.Size([192, 24]).
	size mismatch for network.2.model.0.0.mlp1.U3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp1.C.weight: copying a param with shape torch.Size([128, 128]) from checkpoint, the shape in current model is torch.Size([192, 192]).
	size mismatch for network.2.model.0.0.mlp1.C.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.2.model.0.0.mlp2.norm1.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm3.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.norm3.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.U1.weight: copying a param with shape torch.Size([384, 128]) from checkpoint, the shape in current model is torch.Size([576, 192]).
	size mismatch for network.2.model.0.0.mlp2.U1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.U2.weight: copying a param with shape torch.Size([48, 128]) from checkpoint, the shape in current model is torch.Size([72, 192]).
	size mismatch for network.2.model.0.0.mlp2.U2.bias: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([72]).
	size mismatch for network.2.model.0.0.mlp2.U3.weight: copying a param with shape torch.Size([384, 48]) from checkpoint, the shape in current model is torch.Size([576, 72]).
	size mismatch for network.2.model.0.0.mlp2.U3.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([576]).
	size mismatch for network.2.model.0.0.mlp2.C.weight: copying a param with shape torch.Size([128, 384]) from checkpoint, the shape in current model is torch.Size([192, 576]).
	size mismatch for network.2.model.0.0.mlp2.C.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for network.3.proj.weight: copying a param with shape torch.Size([192, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([192, 192, 3, 3]).
[2024-03-05 16:23:48,502] torch.distributed.elastic.multiprocessing.api: [ERROR] failed (exitcode: 1) local_rank: 0 (pid: 1513152) of binary: /home/sharipov/monet/venv/bin/python
Traceback (most recent call last):
  File "/home/sharipov/monet/venv/bin/torchrun", line 8, in <module>
    sys.exit(main())
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 347, in wrapper
    return f(*args, **kwargs)
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/distributed/run.py", line 812, in main
    run(args)
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/distributed/run.py", line 803, in run
    elastic_launch(
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/distributed/launcher/api.py", line 135, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/sharipov/monet/venv/lib64/python3.9/site-packages/torch/distributed/launcher/api.py", line 268, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
train.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2024-03-05_16:23:48
  host      : i36.izar.cluster
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 1513153)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-03-05_16:23:48
  host      : i36.izar.cluster
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 1513152)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
